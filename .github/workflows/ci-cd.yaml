name: Deploy Infrastructure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    environment: Development
    name: Build, Push Docker Image, and Deploy API
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/api:latest

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Authenticate to Google Cloud
      run: |
        echo ${{ secrets.GCP_KEY }} base64 --decode > ${HOME}/gcloud_key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcloud_key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var "container_image=${{ secrets.DOCKER_USERNAME }}/api:latest"

  verify:
    environment: Development
    name: Verify API
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
    - name: Install curl
      run: sudo apt-get install -y curl

    - name: Verify API Endpoint
      run: |
        API_URL=$(terraform output -raw api_url)
        RESPONSE=$(curl -s $API_URL/time)
        if echo "$RESPONSE" | grep -q '"current_time"'; then
          echo "API is accessible and returned the correct response."
        else
          echo "API test failed."
          exit 1
        fi
